<metro:MetroWindow
            xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
            xmlns:metro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:viewModels="clr-namespace:AudioBand.ViewModels"
            xmlns:converters="clr-namespace:AudioBand.Settings.ValueConverters"
            xmlns:audioBand="clr-namespace:AudioBand.Settings"
            x:Class="AudioBand.Settings.SettingsWindow" 
            mc:Ignorable="d" 
            x:Name="Window"
            d:DesignHeight="800" d:DesignWidth="700"
            Title="Audio Band Settings"
            Height="850"
            Width="800"
            GlowBrush="{DynamicResource AccentColorBrush}"
            WindowStartupLocation="CenterScreen" x:ClassModifier="internal">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:WinColorToWpfColorConverter x:Key="WinColorToWpfColorConverter"/>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>
    <metro:MetroWindow.DataContext>
        <viewModels:Appearance/>
    </metro:MetroWindow.DataContext>
    <DockPanel LastChildFill="True">
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
            <Button x:Name="Cancel" Margin="4" Width="70" Content="Cancel" Style="{DynamicResource SquareButtonStyle}" Click="Cancel_OnClick" metro:ControlsHelper.ContentCharacterCasing="Normal"/>
            <Button x:Name="Save" Margin="4" Width="70" Content="Save" Style="{StaticResource AccentedSquareButtonStyle}" Click="Save_OnClick" metro:ControlsHelper.ContentCharacterCasing="Normal"/>
        </StackPanel>
        <TabControl Margin="10" TabStripPlacement="Left">
            <TabItem  Header="General">
                <StackPanel Style="{StaticResource TabStackPanel}">
                    <Expander Header="AudioBand Size" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="0" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AudioBandAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AudioBandAppearance.Height, Mode=TwoWay}"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
            <TabItem Header="Playback Controls">
                <StackPanel Style="{StaticResource TabStackPanel}">
                    <Expander Header="Play / Pause Button" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding PlayPauseButtonAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding PlayPauseButtonAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding PlayPauseButtonAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding PlayPauseButtonAppearance.XPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding PlayPauseButtonAppearance.YPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="Play Button Image" Style="{StaticResource GridLabel}"/>
                            <audioBand:ImagePicker Grid.Row="5" Grid.Column="1" ImagePath="{Binding PlayPauseButtonAppearance.PlayImagePath, Mode=TwoWay}" />

                            <Label Grid.Row="6" Grid.Column="0" Content="Pause Button Image" Style="{StaticResource GridLabel}"/>
                            <audioBand:ImagePicker Grid.Row="6" Grid.Column="1" ImagePath="{Binding PlayPauseButtonAppearance.PauseImagePath, Mode=TwoWay}" />
                        </Grid>
                    </Expander>
                    <Expander Header="Next Song Button" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding NextSongButtonAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding NextSongButtonAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding NextSongButtonAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding NextSongButtonAppearance.XPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding NextSongButtonAppearance.YPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="Button Image" Style="{StaticResource GridLabel}"/>
                            <audioBand:ImagePicker Grid.Row="5" Grid.Column="1" ImagePath="{Binding NextSongButtonAppearance.ImagePath}"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Previous Song Button" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding PreviousSongButtonAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding PreviousSongButtonAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding PreviousSongButtonAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding PreviousSongButtonAppearance.XPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding PreviousSongButtonAppearance.YPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="Button Image" Style="{StaticResource GridLabel}"/>
                            <audioBand:ImagePicker Grid.Row="5" Grid.Column="1" ImagePath="{Binding PreviousSongButtonAppearance.ImagePath}"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
            <TabItem Header="Text Labels">
                <DockPanel Style="{StaticResource TabDockPanel}">
                    <Button DockPanel.Dock="Top" HorizontalAlignment="Left" Content="Add New label" Style="{StaticResource GridButton}" Click="NewLabelButtonOnClick"/>
                    <ListView Style="{StaticResource TabListView}" ItemsSource="{Binding ElementName=Window, Path=TextAppearancesCollection}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                <Setter Property="Focusable" Value="true"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Expander Header="{Binding Name}" IsExpanded="True">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" Content="Label Name" Style="{StaticResource GridLabel}"/>
                                        <TextBox Grid.Row="0" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" Style="{StaticResource GridTextBox}" Text="{Binding Name, Mode=TwoWay}"/>

                                        <Label Grid.Row="1" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                                        <metro:ToggleSwitch Grid.Row="1" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding IsVisible, Mode=TwoWay}"/>

                                        <Label Grid.Row="2" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding Width, Mode=TwoWay}"/>

                                        <Label Grid.Row="3" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding Height, Mode=TwoWay}"/>

                                        <Label Grid.Row="4" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding XPosition, Mode=TwoWay}"/>

                                        <Label Grid.Row="5" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="5" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding YPosition, Mode=TwoWay}"/>

                                        <Label Grid.Row="6" Grid.Column="0" Content="Font Family" Style="{StaticResource GridLabel}"/>
                                        <TextBox Grid.Row="6" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" Style="{StaticResource GridTextBox}" Text="{Binding FontFamily, Mode=TwoWay}"/>

                                        <Label Grid.Row="7" Grid.Column="0" Content="Font Size" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="7" Grid.Column="1" Style="{StaticResource GridFontSizeInput}" Value="{Binding FontSize, Mode=TwoWay}"/>

                                        <Label Grid.Row="8" Grid.Column="0" Content="Alignment" Style="{StaticResource GridLabel}"/>
                                        <ComboBox Grid.Row="8" Grid.Column="1" Style="{StaticResource GridComboBox}" ItemsSource="{Binding ElementName=Window, Path=TextAlignValues}" SelectedItem="{Binding TextAlignment, Mode=TwoWay}"/>

                                        <Label Grid.Row="9" Grid.Column="0" Content="Text Color" Style="{StaticResource GridLabel}"/>
                                        <xctk:ColorPicker Grid.Row="9" Grid.Column="1" Style="{StaticResource GridColorPicker}" SelectedColor="{Binding Color, Mode=TwoWay, Converter={StaticResource WinColorToWpfColorConverter}}"/>

                                        <Label Grid.Row="10" Grid.Column="0" Content="Scrolling Speed" Style="{StaticResource GridLabel}"/>
                                        <metro:NumericUpDown Grid.Row="10" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding ScrollSpeed, Mode=TwoWay}"/>

                                        <Label Grid.Row="11" Grid.Column="0" Content="Format" Style="{StaticResource GridLabel}" ToolTipService.ShowDuration="60000">
                                            <Label.ToolTip>
                                                <TextBlock>
                                                    Format for the text that is displayed which can include placeholders. <LineBreak/>
                                                    Placeholders will be substituted with their corresponding values. Placeholders are in the format {[style]&lt;tag&gt;:[color]}. <LineBreak/>
                                                    <Bold>Tags</Bold> <LineBreak/>
                                                    &#8226; artist - Artist for the current song <LineBreak/>
                                                    &#8226; song - The title of the current song <LineBreak/>
                                                    &#8226; album - Album name for the current song <LineBreak/>
                                                    &#8226; time - Current playback time for the current song <LineBreak/>
                                                    &#8226; length - Total length of the current song <LineBreak/>
                                                    <Bold>Styles</Bold> <LineBreak/>
                                                    &#8226; * - Bolds the placeholder <LineBreak/>
                                                    &#8226; &amp; - Italicizes the placeholder <LineBreak/>
                                                    &#8226; _ - Underlines the placeholder <LineBreak/>
                                                    <Bold>Colors</Bold> <LineBreak/>
                                                    Use an html color code in the format #RRGGBB <LineBreak/>
                                                    <Bold>Example formats</Bold> <LineBreak/>
                                                    Normal label showing the song and artist : {song} by {artist} <LineBreak/>
                                                    Showing the album name in bold : {*album} <LineBreak/>
                                                    Showing the song progress in gray : {time:#A9A9A9} : {length:#A9A9A9} <LineBreak/>
                                                    Using style and color : {*artist:#a9a9a9} <LineBreak/>
                                                </TextBlock>
                                            </Label.ToolTip>
                                        </Label>
                                        <TextBox Grid.Row="11" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" Style="{StaticResource GridTextBox}" Text="{Binding FormatString, Mode=TwoWay}"/>

                                        <Button Grid.Row="12" HorizontalAlignment="Right" Grid.Column="1" Content="Delete" Style="{StaticResource GridButton}" Click="DeleteLabelOnClick"/>
                                    </Grid>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem Header="Progress Bar">
                <StackPanel Style="{StaticResource TabStackPanel}">
                    <Expander Header="Progress Bar" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding ProgressBarAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding ProgressBarAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding ProgressBarAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding ProgressBarAppearance.XPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding ProgressBarAppearance.YPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="Background Colour" Style="{StaticResource GridLabel}"/>
                            <xctk:ColorPicker Grid.Row="5" Grid.Column="1" Style="{StaticResource GridColorPicker}" SelectedColor="{Binding ProgressBarAppearance.BackgroundColor, Mode=TwoWay, Converter={StaticResource WinColorToWpfColorConverter}}"/>

                            <Label Grid.Row="6" Grid.Column="0" Content="Foreground Color" Style="{StaticResource GridLabel}"/>
                            <xctk:ColorPicker Grid.Row="6" Grid.Column="1" Style="{StaticResource GridColorPicker}" SelectedColor="{Binding ProgressBarAppearance.ForegroundColor, Mode=TwoWay, Converter={StaticResource WinColorToWpfColorConverter}}"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
            <TabItem Header="Album Art">
                <StackPanel Style="{StaticResource TabStackPanel}">
                    <Expander Header="Album Art" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding AlbumArtAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AlbumArtAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AlbumArtAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding AlbumArtAppearance.XPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Y Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding AlbumArtAppearance.YPosition, Mode=TwoWay}"/>

                            <Label Grid.Row="5" Grid.Column="0" Content="Placeholder Image" Style="{StaticResource GridLabel}"/>
                            <audioBand:ImagePicker Grid.Row="5" Grid.Column="1" ImagePath="{Binding AlbumArtAppearance.PlaceholderPath, Mode=TwoWay}"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Album Art Popup" IsExpanded="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Visibility" Style="{StaticResource GridLabel}"/>
                            <metro:ToggleSwitch Grid.Row="0" Grid.Column="1" Style="{StaticResource GridToggle}" OnLabel="Visible" OffLabel="Hidden" IsChecked="{Binding AlbumArtPopupAppearance.IsVisible, Mode=TwoWay}"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Width" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="1" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AlbumArtPopupAppearance.Width, Mode=TwoWay}"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Height" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="2" Grid.Column="1" Style="{StaticResource GridSizeInput}" Value="{Binding AlbumArtPopupAppearance.Height, Mode=TwoWay}"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="X Position" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="3" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding AlbumArtPopupAppearance.XOffset, Mode=TwoWay}"/>

                            <Label Grid.Row="4" Grid.Column="0" Content="Margin" Style="{StaticResource GridLabel}"/>
                            <metro:NumericUpDown Grid.Row="4" Grid.Column="1" Style="{StaticResource GridPosInput}" Value="{Binding AlbumArtPopupAppearance.Margin, Mode=TwoWay}"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</metro:MetroWindow>



